// Translation document for the collection
// =======================================
// This file contains the texts
// annotated for translation
//
// Instructions:
// 1. Open the PO file with Poedit
// 2. Press "Update" to update from sources

gettext('Not');
gettext('01-bit');
gettext('Not');
gettext('NOT gate (Verilog implementation)');
gettext('Input');
gettext('Output');
gettext('TESTs');
gettext('Not');
gettext('01-bit');
gettext('Alhambra-II');
gettext('ice-build');
gettext('01-manual-btn-led');
gettext('# Not gate: Manual testing with a pushbutton and an LED\n\nWhen the button SW1 is not pressed, the input is 0. The output of the  \nnot is 1 and the LED is on  \nWhen the button SW1 is pressed, the input is 1, the output 0 and the  \nLED is off');
gettext('02-serial-btn-led');
gettext('Serial transmiter for the stdout bus (1 char buffer). Sysclk parameter');
gettext('stdout bus splitter into data and tic signals');
gettext('Convert the 1-bit next signal into a 10-bit stdout bus');
gettext('Serial transmitter with a buffer for 1 byte');
gettext('1-byte buffer');
gettext('Puerta NOT');
gettext('Registro de 8 bits');
gettext('D Flip-flop');
gettext('Puerta AND');
gettext('Biestable con entradas de Set y Reset síncronas, para poner y quitar notaficaciones de eventos');
gettext('Detector de flanco de subida. Emite un tic cuando detecta un flanco ascendente');
gettext('Serial transmitter with system clock freq parameter');
gettext(' Transmit one bit as a character. STDOUT-bus');
gettext('Multiplexor de 2 a 1 de 8 bits');
gettext('Valor genérico constante, de 8 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('Biestable de almacenamiento del estado de la máquina');
gettext('Detector de flancos de subida y bajada. Emite tic por las salidas correspondientes al detecta los flancos');
gettext('10 bits, 2-1 Multiplexor');
gettext('stdout bus joiner (data + tic)');
gettext('Extract the next signal from the stdout bus');
gettext('Pulsador con tic de cambio, pulsación y liberación de tecla');
gettext('Sincronizar las entradas de datos con el reloj del sistema');
gettext('Remove the rebound on a mechanical switch');
gettext('Detect changed on the input signal ');
gettext('Puerta OR');
gettext('Biestable de datos (Tipo D). Cuando se recibe un tic por load se captura el dato');
gettext('Emitir un tic inicial al arrancar, y nunca más. Se esperan 32 tics antes de emitir el tic de inicialización');
gettext('Un bit constante a 0');
gettext('Separador de bus de 6-bits en 1 bit y bus de 5 bits');
gettext('Contador del sistema, ascendente, de 6 bits, con enable ');
gettext('Transmit one constant character to the STDOUT bus');
gettext('Transmit one character to the STDOUT bus');
gettext('# Not gate: Manual testing with serial output\n\nThe SW1 pushbutton is used for seting the input to the not gate  \nThe output of the NOT gate is shown on LED0  \nAdditionally, when the sw1 is pressed, both the input and output of the NOT  \ngate are printed on the console:  \n\n```\n0-1\n1-0\n0-1\n```\n\n');
gettext('## Unit Under Test');
gettext('Show the output on LED0');
gettext('Set the not input with the  \npushbutton 1');
gettext('Whenever there is a change in the button 1  \n(pressed or released) or in the begining  \n(when the circuit is started) both the  \nNOT input and output are captured and printed  \non the console');
gettext('Capture the input and output of   \nthe NOT gate');
gettext('Print their values  \non the console');
gettext('## Printing the state on the Console');
gettext('Intput value');
gettext('Output value');
gettext('Input value  \ncaptured');
gettext('Output value  \ncaptured');
gettext('## STDOUT serial\n\nSerial transmitter for the STDOUT bus\n');
gettext('**STDOUT Bus**  \n* Data to transmit (8 bits)  \n* tic (1 bit)\n* data sent (done tic, 1 bit)');
gettext('Empty Buffer  \n(There is no byte  \nwaiting)');
gettext('Byte stored in the  \nbuffer, waiting to be  \ntransmitted when the  \ntransmitter is ready');
gettext('Buffer state:  \n0: empty  \n1: full');
gettext('Transmitter ready');
gettext('If the transmittter is ready  \nand there is a character  \nin the buffer: Transmit!');
gettext('Serial transmitter state');
gettext('## PUTC-bit-stdout: Transmit one bit (STDOUT bus)  \n\nWhen activated, the bit input is sent as the character '0' or '1'  \nWhen not active, the stdout crossed the block (transparent mode)');
gettext('Bit to be transmited');
gettext('Transmit now! (tic)  \nActivate the machine');
gettext('The bit to be transmitted should be  \nsyncronized with its transmit tic');
gettext('If the machine is ready and  \nthe next tic is received:  \nwe are done');
gettext('The machine is done');
gettext('Machine is on: send a character');
gettext('State of the machine  \n0: OFF  \n1: ON: Sending one character');
gettext('Character to transmit when  \nthe input bit is 1');
gettext('Character to transmit when  \nthe input bit is 0');
gettext('Select with character to transmit  \naccording to the input bit');
gettext('Not connected');
gettext('**STDOUT BUS**');
gettext('**Create the bus**  \nfrom the data and tic signals');
gettext('Transparent mode...  \nor not');
gettext('**Tic de apagado**');
gettext('**Tic de encendido**');
gettext('**Inicializar**');
gettext('**Estado de la máquina**');
gettext('## Detector doble: flancos de subida y bajada\n\nSe detectan tanto los flancos de subida como de bajada y se emite los  \ntics por sus salidas correspondientes');
gettext('Señal de  \nentrada');
gettext('Reloj del  \nsistema');
gettext('## Change detector  \n\nIt emits the followings tics:\n\n* When there is a rising edge on the input signal\n* When there is a falling edge\n* When there is either a rising or falling edge');
gettext('## PUTC: Transmit one constant character ');
gettext('Start tic: The byte from the  \ninput char is transmited');
gettext('The machine has finished');
gettext('## PUTC: Transmit one character (STDOUT bus)\n\nWhen **idle**, the STDOUT bus crosses the component without modification    \n\nWhen the machine starts, the char is outputed and the state is changed to busy  \nWhen the transmitter is done (tic received in next)  the machine is turned off');
gettext('Char to be transmited');
gettext('State of the machine:  \n1: ON: transmitting  \n2: OFF: transparent mode  ');
gettext('If the machine is on  \nand the character has been  \ntransmitted: Turn it off');
gettext('03-icerok-btn-led');
gettext('Detección de pulsación. Emite un tic cada vez que se aprieta el pulsador');
gettext('Máquina de contar, de 1 bit');
gettext('Biestable de cambio (Tipo T) con reset. Cuando se recibe un tic cambia de estado');
gettext('16B memory icerok probe');
gettext('16B memory. Bus interface');
gettext('16 Bytes Synchronous memory');
gettext('Join the fields into one 16B memory bus');
gettext('Split a 16B memory bus into its fields');
gettext('Valor constante 0 para bus de 4 bits');
gettext('Valor genérico constante, de 4 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('16B memory sample machine. Captura the input data and store it in the memory');
gettext('8-bits register (in verilog)');
gettext('Un bit constante a 1');
gettext('Multiplexor de 2 a 1 de 14 bits');
gettext('Máquina de contar, de 4 bits');
gettext('Registro de 4 bits con entrada de reset');
gettext('Sumador de un operando de 4 bits con una constante pasada como parámetro (No hay accarreo)');
gettext('Comparador de dos operandos de 4 bits');
gettext('Valor genérico constante (menos 1), de 4 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('16B memory download machine');
gettext('Valor constante 0 para bus de 8 bits');
gettext('2 channel icerok probe adaptor');
gettext('Agregador de 2 buses de 6 y 2-bits a bus de 8-bits');
gettext('Valor constante 0, de 6 bits');
gettext('Valor genérico constante, de 6 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('Agregador de 2 cables en un bus de 2-bits');
gettext('# Not gate: Simple test with icerok\n\nWhen the button SW1 is pressed, the capture start. A one period  \npulse is written to the input of the not gate. Both the input  \nand output are recorded and can be seen with PulseView');
gettext('**Pulsador-tic**');
gettext('**Reloj del sistema**');
gettext('**Estado de**  \n**la máquina**');
gettext('Máquina encendida');
gettext('Máquina apagada  \n(rst = 1)');
gettext('Tic de arranque');
gettext('Tic de fin');
gettext('**Contador de ciclos**');
gettext('Número de ciclos  \ncontados');
gettext('### Salidas');
gettext('Estado de la máquina');
gettext('Ciclo actual');
gettext('Cuenta finalizada');
gettext('Ejecutar el ciclo');
gettext('¿Estamos en el  \nciclo 1?');
gettext('Solo se hace caso a la  \nentrada next si la  \nmáquina está encendida');
gettext('Nuevo ciclo');
gettext('Si es el ciclo 1 y  \nse pide un ciclo  \nnuevo: Terminar');
gettext('Apagar la  \nmáquina');
gettext('Ciclo nuevo:  \nincrementar la cuenta');
gettext('El tic de start se saca  \npor exec para que se ejecute  \nel primer ciclo');
gettext('Si la máquina está  \napagada, las señales  \nde ejecución no pueden  \nsalir!');
gettext('Retrasar la señal un ciclo  \nmientras que se detecta si  \nla máquina ha finalizado o no');
gettext('## Icerok-probe machine\n\nMachine for capturing data, storing it in the memory and transmit  \nto the computer by serial port');
gettext('Writing the data to the memory on  \nevery system clock cycle');
gettext('Transmiting the raw memory contents  \nto the computer, by serial port');
gettext('When the sampling is done  \ntransmit the information to  \nthe computer');
gettext('Memory were the data  \nis stored');
gettext('Reading data from memory  \nReading bus status');
gettext('Calculate if the bus can be taken');
gettext('The bus is available');
gettext('This circuits wants  \nto use the bus');
gettext('The bus has been already  \ntaken');
gettext('One cycle after the machine is done  \nthe bus is already taken to write  \nthe bbusy signal to 0 and allow  \nother circuits to use it');
gettext('The output bus is controlled  \nby this circuit (1) or  \nremain untouched (0)');
gettext('The reading machine  \ncan be started');
gettext('## Sample machine\n\nRead the input data, (one byte per clock cycle) and store it into the memory\n\n');
gettext('Valor  \nincrementado');
gettext('Número de ciclos  \na contar');
gettext('¿Estamos en el  \nciclo k-1?');
gettext('Si es el ciclo k-1 y  \nse pide un ciclo  \nnuevo: Terminar');
gettext('Reading machine');
gettext('## Download machine\n\nTransmit all the memory contents through the serial port  \nThe bytes are transmited raw (in binary). No ascii encoding  \nThere should be a program running on the computer capable of  \nreading these raw bytes');
gettext('04-auto-check-icerok');
gettext('Display the Testbench result on the LEDs');
gettext('Secuencia del coche fantástico, con entrada de enable');
gettext('Corazón de bombeo de tics con periodo paramétrico de milisegundos y entrada de enable');
gettext('Contador módulo M, ascendente, de 4 bits, con reset ');
gettext('Circuito combinacional de 4 entradas y 8 salidas');
gettext('Baliza luminosa de 1 led. Parpadea a 2Hz cuando se activa');
gettext('Bombear 2 bits por segundo');
gettext('Corazon genérico para bombear bits a la frecuencia fijada en Hz (por defecto 1Hz)');
gettext('Multiplicador de cables. Genera un bus de 8 bits, a patir del bit de entrada');
gettext('Componente genérico');
gettext('Circuito combinacional de 4 entradas y 2 salidas');
gettext('Separador de bus de 2-bits en dos cables');
gettext('Comparador de dos operandos de 1 bit');
gettext('Demultiplexor de 1 bit, de 1 a 2');
gettext('6 channel icerok probe adaptor');
gettext('Agregador de 2 buses de 4-bits a bus de 8-bits');
gettext('Agregador de 4 cables en un bus de 4-bits');
gettext('Máquina de contar, de 4 bits, con entrada de stop');
gettext('# Not gate: Auto-checking\n\n');
gettext('### SUCESS animation');
gettext('### Test not passed');
gettext('Sequence state: on/off');
gettext('The \"Knight rider\" sequence  \non the LEDs');
gettext('Blink all the leds at the  \nsame time');
gettext('**Parámetro**: Módulo del contador');
gettext('**Baliza luminosa**\n\nParpadeo del LED a 2Hz');
gettext('Creado a partir de un **corazón  \ngenérico**, dando el valor adecuado  \na su parámetro frecuencia');
gettext('Apagado automática,  \ncuando la máquina  \ntermina');
gettext('Apagado manual');
gettext('05-Truth-table');
gettext('Print a constant string of 127 or less characters');
gettext('Comparador de un operando de 8 bits. Se compara si el operando es igual al parámetro');
gettext('128-bytes memory, initilized with a string');
gettext('Máquina de contar, de 7 bits, con entrada de stop');
gettext('Registro de 7 bits con reset');
gettext('7-bits adder. One operand is a constant (no carry)');
gettext('two operand 7-bits comparator');
gettext('Valor genérico constante (menos 1), de 7 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('Print a constant string of 3 or less characters');
gettext('Máquina de contar, de 2 bits (cuenta hasta 4 ciclos)');
gettext('Registro de 2 bits con reset');
gettext('Sumador de un operando de 2 bits con una constante pasada como parámetro (No hay accarreo)');
gettext('Comparador de dos operandos de 2 bits');
gettext('Valor genérico constante (menos 1), de 2 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('4-bytes memory, initilized with a string');
gettext('Print a constant string of 7 or less characters');
gettext('8-bytes memory, initilized with a string');
gettext('Máquina de contar, de 3 bits, con stop');
gettext('Registro de 3 bits con entrada de reset');
gettext('Comparador de dos operandos de 3 bits');
gettext('Valor genérico constante (menos 1), de 3 bits. Su valor se introduce como parámetro. Por defecto vale 0');
gettext('Sumador de un operando de 3 bits con una constante pasada como parámetro (No hay accarreo)');
gettext('# Not gate: Print the Truth table\n\n');
gettext('## PRINT: Transmit one character (STDOUT bus)\n\nWhen **idle**, the STDOUT bus crosses the component without modification     \n\nWhen the machine starts, the first chars outputed and the state is changed to busy  \nWhen the transmitter is done (tic received in next)  the machine is turned off');
gettext('Start tic: The transmision of  \nthe bytes is started');
gettext('Transmit the next  \ncharacter from the string');
gettext('Tic output: Execute!');
gettext('Count machine. It is counting  \nuntil the stop signal is  \nactivated');
gettext('If the character read is 0  \nwe have reached the end of  \nthe string');
gettext('Memory with the string  \nto be transmited');
gettext('Para automático de la  \nmáquina cuando ha terminado  ');
gettext('Paro externo');
gettext('01-manual-btn-led');
gettext('02-serial-btn-led');
