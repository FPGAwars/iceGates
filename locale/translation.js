// Translation document for the collection
// =======================================
// This file contains the texts
// annotated for translation
//
// Instructions:
// 1. Open the PO file with Poedit
// 2. Press "Update" to update from sources

gettext('And');
gettext('Not');
gettext('Or');
gettext('Xor');
gettext('And-Bus');
gettext('And-Busen');
gettext('And-Op');
gettext('And2');
gettext('Two bits input And gate');
gettext('And-Bus2');
gettext('AND-BUS2. And gate with 2-bits bus input');
gettext('Bus2-Split-all: Split the 2-bits bus into two wires');
gettext('And-Busen2');
gettext('AND-Busen-2: Enable a 2-bits bus. When the enable signal is 0, the output is 0');
gettext('Bus2-Join-all: Joint two wires into a 2-bits Bus');
gettext('Enable input');
gettext('Bus input');
gettext('Bus output');
gettext('And-Op-2');
gettext('AND-Op2: And operation between two numbers of 2 bits');
gettext('Operand 1');
gettext('Operand 2');
gettext('01-bit');
gettext('Not');
gettext('NOT gate (Verilog implementation)');
gettext('Input');
gettext('Output');
gettext('Or-Bus');
gettext('Or2');
gettext('OR2: Two bits input OR gate');
gettext('Or3');
gettext('OR3: Three bits input OR gate');
gettext('Or4');
gettext('OR4: Four bits input OR gate');
gettext('Or7');
gettext('Or7: Seven bits input OR gate');
gettext('Or8');
gettext('OR8: Eight bits input OR gate');
gettext('Or-bus2');
gettext('OR-BUS2: OR gate with 2-bits bus input');
gettext('Or-bus3');
gettext('OR-BUS3: OR gate with 3-bits bus input');
gettext('Bus3-Split-all: Split the 3-bits bus into three wires');
gettext('Or-bus4');
gettext('OR-BUS4: OR gate with 4-bits bus input');
gettext('Bus4-Split-all: Split the 4-bits bus into its wires');
gettext('Or-bus7');
gettext('OR-BUS7: OR gate with 7-bits bus input');
gettext('Bus7-Split-all: Split the 7-bits bus into its wires');
gettext('Or-bus8');
gettext('OR-BUS8: OR gate with 8-bits bus input');
gettext('Bus8-Split-all: Split the 8-bits bus into its wires');
gettext('Xor2');
gettext('XOR gate: two bits input xor gate');
gettext('TESTs');
gettext('00-Index');
gettext('# INDEX: IceGate Collection');
gettext('## AND Menu');
gettext('## Not Menu');
gettext('And-Op2');
gettext('## OR Menu');
gettext('## XOR Menu');
gettext('And');
gettext('Not');
gettext('Or');
gettext('Xor');
gettext('And-Bus');
gettext('And-Busen');
gettext('And-Op');
gettext('And2');
gettext('And-Bus2');
gettext('Alhambra-II');
gettext('01-manual-btns-led');
gettext('# AND-Bus2 gate: Manual testing with two pushbutton and an LED\n\nThe LED is only turned on when both buttons are pressed at the same  \ntime');
gettext('And-Busen-02');
gettext('Alhambra-II');
gettext('01-manual-test-btn-leds');
gettext('2bits constant value: 3');
gettext('Generic: 2-bits generic constant (0,1,2,3)');
gettext('# AND-Busen2 gate: Manual testing with one pushbutton and two LEDs\n\nWhen the button is pressed, the two LEDs are turned on');
gettext('And-Op-2');
gettext('Alhambra-II');
gettext('01-manual-test-btns-leds');
gettext('# AND-Op2: Manual testing with two pushbuttons and two LEDs\n\nThe AND operation is applied to the 2-bits coming form the pushbuttons and a constant  \nnumber (0-3). The result is shown on LEDs 0 and 1\n\nThe number 3 is used by default. It means that the operand coming from the buttons  \nis shown on the LEDs without modification');
gettext('Alhambra-II');
gettext('01-manual-btns-led');
gettext('# AND gate: Manual testing with two pushbuttons and one LED\n\nThe LED is only turned on when both buttons are pressed at the same  \ntime');
gettext('## And Truth table\n\n| i1  | i0  | output |\n|-----|-----|--------|\n| 0   |  0  |   0    |\n| 0   |  1  |   0    |\n| 1   |  0  |   0    |\n| 1   |  1  |   1    |');
gettext('01-bit');
gettext('Alhambra-II');
gettext('01-manual-btn-led');
gettext('# Not gate: Manual testing with a pushbutton and an LED\n\nWhen the button SW1 is not pressed, the input is 0. The output of the  \nnot is 1 and the LED is on  \nWhen the button SW1 is pressed, the input is 1, the output 0 and the  \nLED is off');
gettext('Or-Bus');
gettext('Or2');
gettext('Or3');
gettext('Or4');
gettext('Or7');
gettext('Or8');
gettext('Or-Bus2');
gettext('Or-Bus3');
gettext('Or-Bus4');
gettext('Or-Bus7');
gettext('Or-Bus8');
gettext('Alhambra-II');
gettext('01-manual-btns-led');
gettext('# OR-Bus2 gate: Manual testing with two pushbutton and an LED\n\nThe LED is turned on when the button SW1 is pressed, or the button SW1 or both');
gettext('Alhambra-II');
gettext('01-manual-btns-led');
gettext('Constant bit 0');
gettext('Bus3-Join-all: Joint three wires into a 3-bits Bus');
gettext('# OR-Bus3 gate: Manual testing with two pushbutton and an LED\n\nThe LED is turned on when the button SW1 is pressed, or the button SW1 or both');
gettext('Alhambra-II');
gettext('01-manual-btns-led');
gettext('Bus4-Join-all: Join all the wires into a 4-bits Bus');
gettext('# OR-Bus4 gate: Manual testing with two pushbutton and an LED\n\nThe LED is turned on when the button SW1 is pressed, or the button SW1 or both');
gettext('Alhambra-II');
gettext('01-manual-btns-led');
gettext('Bus7-Join-all: Join all the wires into a 7-bits Bus');
gettext('# OR-Bus7 gate: Manual testing with two pushbutton and an LED\n\nThe LED is turned on when the button SW1 is pressed, or the button SW1 or both');
gettext('Alhambra-II');
gettext('01-manual-btns-led');
gettext('Bus8-Join-all: Join all the wires into a 8-bits Bus');
gettext('# OR-Bus8 gate: Manual testing with two pushbutton and an LED\n\nThe LED is turned on when the button SW1 is pressed, or the button SW1 or both');
gettext('Alhambra-II');
gettext('01-manual-btns-led');
gettext('# OR gate: Manual testing with two pushbuttons and one LED\n\nThe LED is turned on if button 1 or button 2 or both are pressed. Otherwise  \nthe LED0 is off');
gettext('## OR Truth table\n\n| i1  | i0  | output |\n|-----|-----|--------|\n| 0   |  0  |   0    |\n| 0   |  1  |   1    |\n| 1   |  0  |   1    |\n| 1   |  1  |   1    |');
gettext('Alhambra-II');
gettext('01-manual-btns-led');
gettext('Alhambra-II');
gettext('01-manual-btns-led');
gettext('# OR4 gate: Manual testing with two pushbuttons and one LED\n\nThe LED is turned on if button 1 or button 2 or both are pressed. Otherwise  \nthe LED0 is off');
gettext('Alhambra-II');
gettext('01-manual-btns-led');
gettext('# OR7 gate: Manual testing with two pushbuttons and one LED\n\nThe LED is turned on if button 1 or button 2 or both are pressed. Otherwise  \nthe LED0 is off');
gettext('Alhambra-II');
gettext('01-manual-btns-led');
gettext('# OR8 gate: Manual testing with two pushbuttons and one LED\n\nThe LED is turned on if button 1 or button 2 or both are pressed. Otherwise  \nthe LED0 is off');
gettext('Xor2');
gettext('Alhambra-II');
gettext('01-manual-btns-led');
gettext('# XOR gate: Manual testing with two pushbuttons and one LED\n\nThe LED is turned on only if button 1 is pressed or button 2 is pressed but not  \nboth at the same time');
gettext('## XOR Truth table\n\n| i1  | i0  | output |\n|-----|-----|--------|\n| 0   |  0  |   0    |\n| 0   |  1  |   1    |\n| 1   |  0  |   1    |\n| 1   |  1  |   0    |');
